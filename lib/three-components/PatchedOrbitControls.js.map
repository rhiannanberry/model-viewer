{"version":3,"file":"PatchedOrbitControls.js","sourceRoot":"","sources":["../../src/three-components/PatchedOrbitControls.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport OrbitControls from '../third_party/three/OrbitControls.js';\n\nconst $onKeyDown = Symbol('onKeyDown');\n\nconst KEYBOARD_ORBIT_INCREMENT = Math.PI / 10;\n\n/**\n * This patched extension of OrbitControls adds automatic support for\n * controlling the orbit of the camera with the keyboard arrows when the\n * element is focused.\n */\nexport class PatchedOrbitControls extends OrbitControls {\n  constructor(...args) {\n    super(...args);\n\n    this[$onKeyDown] = (event) => this.onKeyDown(event);\n    this.domElement.addEventListener('keydown', this[$onKeyDown]);\n\n    Object.assign(this.keys, {PAGE_UP: 33, PAGE_DOWN: 34});\n  }\n\n  dispose() {\n    super.dispose();\n    this.domElement.removeEventListener('keydown', this[$onKeyDown]);\n  }\n\n  onKeyDown(event) {\n    let handled = false;\n\n    switch (event.keyCode) {\n      case this.keys.PAGE_UP:\n        this.zoomIn();\n        handled = true;\n        break;\n      case this.keys.PAGE_DOWN:\n        this.zoomOut();\n        handled = true;\n        break;\n      case this.keys.UP:\n        this.orbitUp(KEYBOARD_ORBIT_INCREMENT);\n        handled = true;\n        break;\n      case this.keys.BOTTOM:\n        this.orbitDown(KEYBOARD_ORBIT_INCREMENT);\n        handled = true;\n        break;\n      case this.keys.LEFT:\n        this.orbitLeft(KEYBOARD_ORBIT_INCREMENT);\n        handled = true;\n        break;\n      case this.keys.RIGHT:\n        this.orbitRight(KEYBOARD_ORBIT_INCREMENT);\n        handled = true;\n        break;\n    }\n\n    if (handled) {\n      event.preventDefault();\n      this.update();\n    }\n  }\n\n  zoomIn() {\n    const event = new CustomEvent('wheel');\n    event.deltaY = -1;\n    this.domElement.dispatchEvent(event);\n  }\n\n  zoomOut() {\n    const event = new CustomEvent('wheel');\n    event.deltaY = 1;\n    this.domElement.dispatchEvent(event);\n  }\n\n  orbitUp(increment) {\n    this.getSphericalDelta().phi += increment;\n  }\n\n  orbitDown(increment) {\n    this.getSphericalDelta().phi -= increment;\n  }\n\n  orbitLeft(increment) {\n    this.getSphericalDelta().theta += increment;\n  }\n\n  orbitRight(increment) {\n    this.getSphericalDelta().theta -= increment;\n  }\n}\n"]}