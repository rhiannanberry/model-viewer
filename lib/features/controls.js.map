{"version":3,"file":"controls.js","sourceRoot":"","sources":["../../src/features/controls.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {PerspectiveCamera, Vector3} from 'three';\n\nimport {$needsRender, $onModelLoad, $onResize, $scene} from '../model-viewer-base.js';\nimport {FRAMED_HEIGHT} from '../three-components/ModelScene.js';\nimport {PatchedOrbitControls} from '../three-components/PatchedOrbitControls.js';\n\nconst ORBIT_NEAR_PLANE = 0.01;\nconst ORBIT_FAR_PLANE = 1000;\n\nexport const $controls = Symbol('controls');\nconst $updateOrbitCamera = Symbol('updateOrbitCamera');\nconst $onControlsChange = Symbol('onControlsChange');\nconst $orbitCamera = Symbol('orbitCamera');\nconst $defaultCamera = Symbol('defaultCamera');\n\nexport const ControlsMixin = (ModelViewerElement) => {\n  return class extends ModelViewerElement {\n    static get properties() {\n      return {...super.properties, controls: {type: Boolean}};\n    }\n\n    constructor() {\n      super();\n      this[$onControlsChange] = this[$onControlsChange].bind(this);\n\n      this[$defaultCamera] = this[$scene].getCamera();\n\n      this[$orbitCamera] = this[$scene].camera.clone();\n      this[$orbitCamera].near = ORBIT_NEAR_PLANE;\n      this[$orbitCamera].far = ORBIT_FAR_PLANE;\n      this[$orbitCamera].updateProjectionMatrix();\n      this[$controls] = null;\n    }\n\n    update(changedProperties) {\n      super.update(changedProperties);\n\n      if (!changedProperties.has('controls')) {\n        return;\n      }\n\n      if (this.controls) {\n        this[$scene].setCamera(this[$orbitCamera]);\n\n        this[$controls] =\n            new PatchedOrbitControls(this[$orbitCamera], this[$scene].canvas);\n        this[$controls].target.set(0, FRAMED_HEIGHT / 2, 0);\n        this[$controls].enabled = true;\n        // Panning performed via right click, two finger move\n        this[$controls].enablePan = false;\n        // Panning performed via arrow keys; possibly redundant with `enablePan`\n        this[$controls].enableKeys = false;\n        this[$controls].addEventListener('change', this[$onControlsChange]);\n\n        this[$updateOrbitCamera]();\n\n      } else {\n        this[$scene].setCamera(this[$defaultCamera]);\n\n        if (this[$controls]) {\n          this[$controls].dispose();\n          this[$controls].removeEventListener(\n              'change', this[$onControlsChange]);\n          this[$controls] = null;\n        }\n      }\n    }\n\n    /**\n     * Copies over the default camera's values in order to frame\n     * the scene correctly.\n     */\n    [$updateOrbitCamera]() {\n      // The default camera already has positioned itself correctly\n      // to frame the canvas. Copy its values.\n      this[$orbitCamera].position.copy(this[$defaultCamera].position);\n      this[$orbitCamera].aspect = this[$defaultCamera].aspect;\n      this[$orbitCamera].rotation.set(0, 0, 0);\n      this[$orbitCamera].updateProjectionMatrix();\n\n      if (this[$controls]) {\n        // Zooming out beyond the 'frame' doesn't serve much purpose\n        // and will only end up showing the skysphere if zoomed out enough\n        this[$controls].maxDistance = this[$orbitCamera].position.z;\n      }\n    }\n\n    [$onResize](e) {\n      super[$onResize](e);\n      this[$updateOrbitCamera]();\n    }\n\n    [$onModelLoad](e) {\n      super[$onModelLoad](e);\n      this[$updateOrbitCamera]();\n    }\n\n    [$onControlsChange](e) {\n      this[$needsRender]();\n    }\n  };\n};\n"]}