{"version":3,"file":"environment.js","sourceRoot":"","sources":["../../src/features/environment.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Color} from 'three';\n\nimport {$needsRender, $onModelLoad, $renderer, $scene, $tick} from '../model-viewer-base.js';\nconst DEFAULT_BACKGROUND_COLOR = '#ffffff';\nconst GAMMA_TO_LINEAR = 2.2;\n\nconst $currentCubemap = Symbol('currentCubemap');\nconst $setEnvironmentImage = Symbol('setEnvironmentImage');\nconst $setEnvironmentColor = Symbol('setEnvironmentColor');\nconst $hasBackgroundImage = Symbol('hasBackgroundImage');\nconst $hasBackgroundColor = Symbol('hasBackgroundColor');\nconst $deallocateTextures = Symbol('deallocateTextures');\n\nexport const EnvironmentMixin = (ModelViewerElement) => {\n  return class extends ModelViewerElement {\n    static get properties() {\n      return {\n        ...super.properties,\n        backgroundImage: {type: String, attribute: 'background-image'},\n        backgroundColor: {type: String, attribute: 'background-color'}\n      };\n    }\n\n    get [$hasBackgroundImage]() {\n      // @TODO #76\n      return this.backgroundImage && this.backgroundImage !== 'null';\n    }\n\n    get [$hasBackgroundColor]() {\n      // @TODO #76\n      return this.backgroundColor && this.backgroundColor !== 'null';\n    }\n\n    connectedCallback() {\n      super.connectedCallback();\n    }\n\n    async update(changedProperties) {\n      super.update(changedProperties);\n\n      // If no background-image/background-color set, use the default\n      // color.\n      if (!this[$hasBackgroundImage] && !this[$hasBackgroundColor]) {\n        this[$setEnvironmentColor](DEFAULT_BACKGROUND_COLOR);\n        return;\n      }\n\n      if (!changedProperties.has('backgroundImage') &&\n          !changedProperties.has('backgroundColor')) {\n        return;\n      }\n\n      if (this[$hasBackgroundImage]) {\n        this[$setEnvironmentImage](this.backgroundImage);\n      } else if (this[$hasBackgroundColor]) {\n        this[$setEnvironmentColor](this.backgroundColor);\n      }\n    }\n\n    [$tick](time, delta) {\n      super[$tick](time, delta);\n      const camera = this[$scene].getCamera();\n      this[$scene].skysphere.position.copy(camera.position);\n    }\n\n    [$onModelLoad](e) {\n      super[$onModelLoad](e);\n\n      if (this[$currentCubemap]) {\n        this[$scene].model.applyEnvironmentMap(this[$currentCubemap]);\n        this[$needsRender]();\n      }\n    }\n\n    /**\n     * @param {string} url\n     */\n    async [$setEnvironmentImage](url) {\n      const textureUtils = this[$renderer].textureUtils;\n      const textures = await textureUtils.toCubemapAndEquirect(url);\n\n      // If the background image has changed\n      // while fetching textures, abort and defer to that\n      // invocation of this function.\n      if (url !== this.backgroundImage) {\n        return;\n      }\n\n      this[$deallocateTextures]();\n\n      // If could not load textures (probably an invalid URL), then abort\n      // after deallocating textures.\n      if (!textures) {\n        this[$scene].model.applyEnvironmentMap(null);\n        return;\n      }\n\n      const { cubemap, equirect } = textures;\n\n      this[$scene].skysphere.material.color = new Color(0xffffff);\n      this[$scene].skysphere.material.map = equirect;\n      this[$scene].skysphere.material.needsUpdate = true;\n      this[$currentCubemap] = cubemap;\n      this[$scene].model.applyEnvironmentMap(cubemap);\n\n      this[$needsRender]();\n    }\n\n    /**\n     * @param {string} color\n     */\n    [$setEnvironmentColor](color) {\n      const textureUtils = this[$renderer].textureUtils;\n\n      this[$deallocateTextures]();\n\n      this[$scene].skysphere.material.color = new Color(color);\n      this[$scene].skysphere.material.color.convertGammaToLinear(\n          GAMMA_TO_LINEAR);\n      this[$scene].skysphere.material.map = null;\n      this[$scene].skysphere.material.needsUpdate = true;\n\n      // TODO can cache this per renderer and color\n      const cubemap = textureUtils.generateDefaultEnvMap();\n      this[$currentCubemap] = cubemap;\n      this[$scene].model.applyEnvironmentMap(this[$currentCubemap]);\n\n      this[$needsRender]();\n    }\n\n    [$deallocateTextures]() {\n      if (this[$scene].skysphere.material.map) {\n        this[$scene].skysphere.material.map.dispose();\n        this[$scene].skysphere.material.map = null;\n      }\n      if (this[$currentCubemap]) {\n        this[$currentCubemap].dispose();\n        this[$currentCubemap] = null;\n      }\n    }\n  }\n};\n"]}