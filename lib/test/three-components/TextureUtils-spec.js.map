{"version":3,"file":"TextureUtils-spec.js","sourceRoot":"","sources":["../../../src/test/three-components/TextureUtils-spec.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {TextureLoader, WebGLRenderer} from 'three';\n\nimport TextureUtils from '../../three-components/TextureUtils.js';\nimport {assetPath, textureMatchesMeta} from '../helpers.js';\n\nconst expect = chai.expect;\n\n// Reuse the same canvas as to not stress the WebGL\n// context limit\nconst canvas = document.createElement('canvas');\nconst EQUI_URL = assetPath('equirectangular.png');\n\nsuite('TextureUtils', () => {\n  let textureUtils;\n  setup(() => {\n    const renderer = new WebGLRenderer({canvas});\n    textureUtils = new TextureUtils(renderer);\n  });\n  teardown(() => textureUtils.dispose());\n\n  suite('load', () => {\n    test('loads a valid texture from URL', async () => {\n      let texture = await textureUtils.load(EQUI_URL);\n      texture.dispose();\n      expect(texture.isTexture).to.be.ok;\n      expect(\n          textureMatchesMeta(texture, {type: 'Equirectangular', url: EQUI_URL}))\n          .to.be.ok;\n    });\n    test('throws on invalid URL', async () => {\n      try {\n        await textureUtils.load(null);\n        expect(false).to.be.ok;\n      } catch (e) {\n        expect(true).to.be.ok;\n      }\n    });\n    test('throws if texture not found', async () => {\n      try {\n        await textureUtils.load('./nope.png');\n        expect(false).to.be.ok;\n      } catch (e) {\n        expect(true).to.be.ok;\n      }\n    });\n  });\n\n  suite('equirectangularToCubemap', () => {\n    test('creates a cubemap from texture', async () => {\n      const texture = await textureUtils.load(EQUI_URL);\n      const cubemap = textureUtils.equirectangularToCubemap(texture);\n      texture.dispose();\n      cubemap.dispose();\n      expect(cubemap.isTexture).to.be.ok;\n      expect(\n          textureMatchesMeta(cubemap, {type: 'EnvironmentMap', url: EQUI_URL}))\n          .to.be.ok;\n    });\n    test('throws on invalid texture', async () => {\n      try {\n        await textureUtils.equirectangularToCubemap({});\n        expect(false).to.be.ok;\n      } catch (e) {\n        expect(true).to.be.ok;\n      }\n    });\n  });\n\n  suite('toCubemapAndEquirect', () => {\n    test('returns a cubemap and texture from url', async () => {\n      const textures = await textureUtils.toCubemapAndEquirect(EQUI_URL);\n      textures.equirect.dispose();\n      textures.cubemap.dispose();\n      expect(textures.equirect.isTexture).to.be.ok;\n      expect(textures.cubemap.isTexture).to.be.ok;\n\n      expect(textureMatchesMeta(\n                 textures.equirect, {type: 'Equirectangular', url: EQUI_URL}))\n          .to.be.ok;\n      expect(textureMatchesMeta(\n                 textures.cubemap, {type: 'EnvironmentMap', url: EQUI_URL}))\n          .to.be.ok;\n    });\n\n    test('throws if given an invalid url', async () => {\n      try {\n        await textureUtils.toCubemapAndEquirect({});\n        expect(false).to.be.ok;\n      } catch (e) {\n        expect(true).to.be.ok;\n      }\n    });\n  });\n});\n"]}